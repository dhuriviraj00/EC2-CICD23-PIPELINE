name: Deploy to Development and Production

on:
  push:
    branches:
      - master
      - 'release/*'

jobs:
  deploy-to-development:
    runs-on: ubuntu-latest
    environment: development
    if: github.ref == 'refs/heads/master'
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install required packages
        run: |
          sudo apt-get update
          sudo apt-get install -y curl jq zip awscli 

       #- name: Upload to S3
       # run: |
        #  aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          #aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
         # aws configure set default.region ${{ secrets.AWS_DEFAULT_REGION }}
          #aws s3 cp ./index.html s3://${{ secrets.S3_BUCKET }}/index.html --acl public-read

      - name: Deploy with AWS CodeDeploy
        id: deploy
        env:
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
         # S3_BUCKET: ${{ secrets.S3_BUCKET }}
          APPLICATION_NAME: ${{ vars.APPLICATION_NAME }}
          DEPLOYMENT_GROUP: ${{ vars.DEPLOYMENT_GROUP }}
        run: |
          deployment_id=$(aws deploy create-deployment \
            --application-name ${{ vars.APPLICATION_NAME }} \
            --deployment-group-name ${{ vars.DEPLOYMENT_GROUP }} \
            --s3-location "bucket=${S3_BUCKET},bundleType=html,key=index.html" \
            --ignore-application-stop-failures \
            --region ${{ secrets.AWS_DEFAULT_REGION }} \
            --query 'deploymentId' \
            --output 'text')
          echo "::set-output name=deployment-id::$deployment_id"

      - name: Wait for deployment
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws configure set default.region ${{ secrets.AWS_DEFAULT_REGION }}
          aws deploy wait deployment-successful --deployment-id ${{ steps.deploy.outputs.deployment-id }} --region ${{ secrets.AWS_DEFAULT_REGION }}

  deploy-to-production:
    runs-on: ubuntu-latest
    environment: production
    if: startsWith(github.ref, 'refs/heads/release/') # Only run for the 'release' branch
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install required packages
        run: |
          apt-get update
          apt-get install -y curl jq zip awscli 
          
      - name: Upload to S3_
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws configure set default.region ${{ secrets.AWS_DEFAULT_REGION }}
          aws s3 cp ./index.html s3://${{ secrets.S3_BUCKET }}/index.html --acl public-read


      
      - name: Deploy with AWS CodeDeploy
        id: deploy
        env:
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
         # S3_BUCKET: ${{ secrets.S3_BUCKET }}
          APPLICATION_NAME: ${{ vars.APPLICATION_NAME }}
          DEPLOYMENT_GROUP: ${{ vars.DEPLOYMENT_GROUP }}
        run: |
          deployment_id=$(aws deploy create-deployment \
            --application-name ${{ vars.APPLICATION_NAME }} \
            --deployment-group-name ${{ vars.DEPLOYMENT_GROUP }} \
            --s3-location "bucket=${S3_BUCKET},bundleType=html,key=index.html" \
            --ignore-application-stop-failures \
            --region ${{ secrets.AWS_DEFAULT_REGION }} \
            --query 'deploymentId' \
            --output 'text')
          echo "::set-output name=deployment-id::$deployment_id"

      - name: Wait for deployment
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws configure set default.region ${{ secrets.AWS_DEFAULT_REGION }}
          aws deploy wait deployment-successful --deployment-id ${{ steps.deploy.outputs.deployment-id }} --region ${{ secrets.AWS_DEFAULT_REGION }}

