name: Development and Production on Master Branch Push

on:
  push:
    branches:
      - master

jobs:
  deploy-development:
    name: Development
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v2

      - name: Step 2 - Configure AWS credentials for Development
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2

      - name: Step 3 - Create CodeDeploy Deployment for Development
        id: deploy-development
        run: |
          aws deploy create-deployment \
            --application-name Git_Application \
            --deployment-group-name deployment_group \
            --deployment-config-name CodeDeployDefault.OneAtATime \
            --github-location repository=${{ github.repository }},commitId=${{ github.sha }}
    
      - name: Step 4 - Check Deployment Status
        id: deployment-status
        run: |
          # You can use AWS CLI or other tools to check the status of the deployment
          # For example, you can check if the deployment is successful
          deployment_status=$(aws deploy get-deployment --deployment-id ${{ steps.deploy-development.outputs.deploymentId }} --query 'deploymentInfo.status' --output text)
          if [ "$deployment_status" == "Succeeded" ]; then
            echo "Development deployment succeeded."
          else
            echo "Development deployment failed or is still in progress."
            exit 1
          fi

  deploy-production:
    runs-on: ubuntu-latest
    needs: [deploy-development]
    if: github.ref == 'refs/heads/master' && success()
    steps:
      - name: Step 1 - Configure AWS credentials for Deployment
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2

      - name: Step 2 - Deploy to Production
        run: |
          # Add your production deployment steps here
